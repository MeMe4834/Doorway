package view;

import jxl.Workbook;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;

import javax.swing.*;
import java.io.File;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.List;

//Receipt 클래스
//Receipt 클래스
public class Receipt extends JFrame {
	private JPanel receiptPanel;
    private JLabel txtTotal;
    private int total = 0;
    private List<String> menuList;
    private List<Integer> quantityList;
    private List<Integer> priceList;

 public Receipt() {
	    setTitle("영수증");
	    setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
	    setSize(300, 400); // 
	    setLocationRelativeTo(null);
	    
	    menuList = new ArrayList<>();
        quantityList = new ArrayList<>();
        priceList = new ArrayList<>();

	    receiptPanel = new JPanel();
	    receiptPanel.setLayout(new BorderLayout());

	    JPanel labelPanel = new JPanel(new GridLayout(1, 3));
        labelPanel.add(new JLabel("상품"));
        labelPanel.add(new JLabel("수량"));
        labelPanel.add(new JLabel("가격"));

        receiptPanel.add(labelPanel, BorderLayout.NORTH);

        JPanel contentPanel = new JPanel();
        contentPanel.setLayout(new BoxLayout(contentPanel, BoxLayout.Y_AXIS));

        txtTotal = new JLabel("총 금액: " + total);
        txtTotal.setFont(new Font("Arial", Font.BOLD, 16));

        receiptPanel.add(new JScrollPane(contentPanel), BorderLayout.CENTER);
        receiptPanel.add(txtTotal, BorderLayout.SOUTH);

        add(receiptPanel);
        setVisible(true);
	}


 public void addToReceipt(String menu, int quantity, int price) {
     JPanel itemPanel = new JPanel();
     itemPanel.setLayout(new GridLayout(1, 3));
     itemPanel.setBorder(BorderFactory.createLineBorder(Color.BLACK)); // 테두리 추가
     itemPanel.add(new JLabel(menu));
     itemPanel.add(new JLabel(Integer.toString(quantity)));
     itemPanel.add(new JLabel(Integer.toString(price)));

     receiptPanel.add(itemPanel);
     total += price;
     txtTotal.setText("Total Price: " + total);

     revalidate();
     repaint();
     
     try {
         File file = new File("/Users/smile/Desktop/주문내역.xls");
         
         // 파일이 존재하지 않으면 새로운 파일 생성 후 주문 내역 추가
         if (!file.exists()) {
             WritableWorkbook workbook = Workbook.createWorkbook(file);
             WritableSheet sheet = workbook.createSheet("주문내역", 0);
             
             Label timeLabel = new Label(0, 0, "Time"); // 시간 행에 "Time" 기록
             Label menuLabel = new Label(1, 0, "Menu"); // 메뉴 이름 행에 "Menu" 기록
             Label quantityLabel = new Label(2, 0, "Quantity"); // 수량 행에 "Quantity" 기록
             Label priceLabel = new Label(3, 0, "Price"); // 가격 행에 "Price" 기록

             sheet.addCell(timeLabel);
             sheet.addCell(menuLabel);
             sheet.addCell(quantityLabel);
             sheet.addCell(priceLabel);
             
             DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
             LocalDateTime currentTime = LocalDateTime.now();
             String formattedTime = currentTime.format(formatter);

             Label timeNowLabel = new Label(0, 1, formattedTime); // 시간 기록
             Label menuDataLabel = new Label(1, 1, menu); // 메뉴 이름 기록
             Label quantityDataLabel = new Label(2, 1, Integer.toString(quantity)); // 수량 기록
             Label priceDataLabel = new Label(3, 1, Integer.toString(price)); // 가격 기록

             sheet.addCell(timeNowLabel);
             sheet.addCell(menuDataLabel);
             sheet.addCell(quantityDataLabel);
             sheet.addCell(priceDataLabel);

             workbook.write(); // 엑셀 파일에 쓰기
             workbook.close(); // 엑셀 파일 닫기

             //JOptionPane.showMessageDialog(null, "주문 내역이 엑셀 파일에 저장되었습니다.");
         } else {
             // 파일이 이미 존재하는 경우, 기존 파일 열고 주문 내역 추가
             Workbook existingWorkbook = Workbook.getWorkbook(file);
             WritableWorkbook workbookCopy = Workbook.createWorkbook(file, existingWorkbook);
             WritableSheet sheet = workbookCopy.getSheet(0);

             int lastRow = sheet.getRows(); // 마지막 행 인덱스 가져오기
             
//             Label customerLabel = new Label(0, lastRow, "customer"); // 새로운 행에 고객 이름 기록
//             sheet.addCell(customerLabel);
             
             DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
             LocalDateTime currentTime = LocalDateTime.now();
             String formattedTime = currentTime.format(formatter);
             Label timeLabel = new Label(0, lastRow, formattedTime); // 새로운 행에 시간 기록
             sheet.addCell(timeLabel);

             Label menuLabel = new Label(1, lastRow, menu); // 새로운 행에 메뉴 이름 기록
             sheet.addCell(menuLabel);

             Label quantityLabel = new Label(2, lastRow, Integer.toString(quantity)); // 새로운 행에 수량 기록
             sheet.addCell(quantityLabel);

             Label priceLabel = new Label(3, lastRow, Integer.toString(price)); // 새로운 행에 가격 기록
             sheet.addCell(priceLabel);

             workbookCopy.write(); // 엑셀 파일에 쓰기
             workbookCopy.close(); // 엑셀 파일 닫기

             //JOptionPane.showMessageDialog(null, "주문 내역이 엑셀 파일에 추가되었습니다.");
         }
     } catch (Exception e) {
         e.printStackTrace();
     }
 }
}
